extends VBoxContainer
## Menu responsible for searching and installing asset library project
## (ie. projects available in the asset library).


const _ASSET_QUERY_PREFIX = "https://godotengine.org/asset-library/api/asset?"
const _ASSETS_PER_PAGE = 40

var _current_page: int = 0

@onready var _search_field: LineEdit = %SearchField
@onready var _version_option: OptionButton = %VersionOption
@onready var _sort_option: OptionButton = %SortOption
@onready var _category_option: OptionButton = %CategoryOption
@onready var _support_options: MenuButton = %SupportOptions


func _ready():
	$ScrollContainer.add_theme_stylebox_override("panel",
			get_theme_stylebox("search_panel", "ProjectManager"))


## Generates a query to the asset library, using the keys and values of
## a given dictionary.[br]
##
## Example [param pairs]:[br]
## [code]{"filter": "cheese", page: 2}[/code][br]
## Example output, based on the given example [param pairs]:[br]
## "https://godotengine.org/asset-library/api/asset?filter=cheese&page=2"
func _generate_query(pairs: Dictionary) -> String:
	var result_url = _ASSET_QUERY_PREFIX
	for key in pairs:
		if not pairs[key]:
			continue
		if pairs[key] is String:
			result_url += key + "=" + pairs[key].uri_encode() + "&"
		elif pairs[key] is bool:
			result_url += key + "&"
		elif pairs[key] is Array:
			result_url += key + "="
			var list = ""
			for element in pairs[key]:
				list += element.uri_encode() + "+"
			result_url += list.trim_suffix("+") + "&"
	
	return result_url.trim_suffix("&")


## Generates a dictonary for the query to be generated by using the
## options chosen by the user through the UI.  It uses the keys listed
## here: [url]https://github.com/godotengine/godot-asset-library/blob/master/API.md#assets-api[/url]
func _generate_query_dictionary() -> Dictionary:
	var result = {}
	result.type = "project"
	
	if not _category_option.get_selected_id() == 0:
		result.category = _category_option.get_selected_id()
	
	result.support = []
	var popup = _support_options.get_popup()
	if popup.is_item_checked(0):
		result.support.append("official")
	if popup.is_item_checked(1):
		result.support.append("community")
	if popup.is_item_checked(2):
		result.support.append("testing")
	
	if _search_field.text.strip_edges() != "":
		result.filter = _search_field.text.strip_edges() # TODO encode
	
	# TODO version
	
	result.max_results = _ASSETS_PER_PAGE
	
	result.page = _current_page
	
	match _sort_option.get_selected_id():
		0:
			result.sort = "updated"
			result.reverse = false
		1:
			result.sort = "updated"
			result.reverse = true
		2:
			result.sort = "name"
			result.reverse = false
		3:
			result.sort = "name"
			result.reverse = false
		4:
			result.sort = "cost"
			result.reverse = false
		5:
			result.sort = "cost"
			result.reverse = true
	
	return result
